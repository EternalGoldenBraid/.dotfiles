// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+a v",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+a f",
        "command": "workbench.action.splitEditorDown",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a v",
        "command": "workbench.action.splitEditor",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "python.execInTerminal-icon"
    },
    {
        "key": "alt+meta+enter",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "ctrl+a n",
        "command": "workbench.action.switchWindow"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "space",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled && neovim.mode == normal"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+a e",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a c",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "editorFocus || sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a ctrl+l",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    { 
    "key": "ctrl+a ctrl+l",
    "command": "workbench.debug.panel.action.clearReplAction",
    "when": "inDebugRepl"
    },
    {
        "key": "ctrl+a d",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+a k",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+a z",
        "command": "workbench.action.toggleEditorWidths",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a z",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a z",
        

    },
    {
        "key": "ctrl+alt+backspace",
        "command": "editor.debug.action.runToCursor"
    },
    {
        "key": "meta+b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus && !editorReadonly",
    },
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert",
        "args": "j"
    },
    {
        "command": "vscode-neovim.compositeEscape2",
        "key": "k",
        "when": "neovim.mode == insert",
        "args": "k"
    }
]